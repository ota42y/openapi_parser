openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: http://petstore.swagger.io/api
paths:
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: findPets
      tags:
      - tag_1
      - tag_2
      summary: sum
      deprecated: true
      parameters:
      - name: tags
        in: query
        description: tags to filter by
        required: false
        style: form
        allowEmptyValue: true
        schema:
          type: array
          items:
            type: string
          additionalProperties:
            type: string
      - name: limit
        in: query
        description: maximum number of results to return
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - $ref: '#/components/parameters/test'
      - name: all_of_check
        in: query
        required: false
        schema:
          type: 
            - "object"
            - "null"
          allOf:
          - $ref: '#/components/parameters/test'
          -
            type: object
            required:
            - name
            properties:
              nmae:
                type: string
          properties:
            pop:
              type: string
              readOnly: true
              example: 'test'
              deprecated: true
            int:
              type: integer
              writeOnly: true
          additionalProperties: true
          description: desc
      responses:
        '200':
          description: pet response
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
            x-limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            non-nullable-x-limit:
              $ref: '#/components/headers/Non-Nullable-X-Rate-Limit-Limit'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            'application/unknown':
              schema:
                type: object
            'application/*':
              schema:
                type: object
            '*/*':
              schema:
                type: object
        '4XX':
          description: error response
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                  message:
                    type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '201':
          $ref: '#/components/responses/normal'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
      - name: id
        in: path
        description: ID of pet to fetch
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      parameters:
      - name: id
        in: path
        description: ID of pet to fetch
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        $ref: '#/components/requestBodies/test_body'
      responses:
        '200':
          $ref: '#/components/responses/normal'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
      - name: id
        in: path
        description: ID of pet to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{nickname}/adopt/{param_2}:
    post:
      description: Adopt a pet
      operationId: adoptPet
      parameters:
      - name: nickname
        in: path
        description: Name of pet to adopt
        required: true
        schema:
          type: string
      - name: param_2
        in: path
        description: Sample parameter
        required: true
        schema:
          type: string
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /animals/{id}:
    parameters:
    - $ref: '#/components/parameters/petId'
    - name: token
      in: header
      description: token to be passed as a header
      required: true
      schema:
        type: integer
        format: int64
      style: simple
    get:
      parameters:
        - name: header_2
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
  /animals/{groupId}/{id}.json:
    parameters:
    - $ref: '#/components/parameters/petId'
    - name: groupId
      in: path
      description: group ID of the animal
      required: true
      schema:
        type: integer
        format: int64
      style: simple
    - name: token
      in: header
      description: token to be passed as a header
      required: true
      schema:
        type: integer
        format: int64
      style: simple
    get:
      parameters:
      - name: header_2
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'

components:
  parameters:
    test:
      name: limit
      in: query
      description: maximum number of results to return
      required: false
      schema:
        type: integer
        format: int32
    test_ref:
      $ref: '#/components/parameters/test'
    petId:
      in: path
      name: id
      description: ID of pet to fetch
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    Pet:
      allOf:
      - $ref: '#/components/schemas/NewPet'
      - type: object
        required:
        - id
        properties:
          id:
            type: integer
            format: int64

    NewPet:
      type: object
      required:
      - name
      properties:
        name:
          type: string
        tag:
          type: string

    Error:
      type: object
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  responses:
    normal:
      description: pet response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Pet'
  requestBodies:
    test_body:
      description: Pet to add to the store
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewPet'
  headers:
    X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
    Non-Nullable-X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
